name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio black isort mypy

      - name: Code formatting check (Black)
        run: black --check --diff src/ main.py

      - name: Import sorting check (isort)
        run: isort --check-only --diff src/ main.py

      - name: Type checking (mypy)
        run: mypy src/ main.py --ignore-missing-imports

      - name: Run tests
        run: pytest tests/ -v --tb=short
        continue-on-error: true  # Tests may not exist yet

  test-web:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        working-directory: web
        run: npm ci

      - name: Lint TypeScript
        working-directory: web
        run: npm run lint

      - name: Type check
        working-directory: web
        run: npx tsc --noEmit

      - name: Build web interface
        working-directory: web
        run: npm run build

      - name: Test web interface
        working-directory: web
        run: npm test
        continue-on-error: true  # Tests may not exist yet

  test-docker:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test Docker build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker Compose
        run: |
          # Create test environment
          cp .env.example .env
          
          # Start services
          docker-compose up -d
          
          # Wait for services to be ready
          sleep 30
          
          # Test health endpoint
          curl -f http://localhost:1984/health || exit 1
          
          # Cleanup
          docker-compose down

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4